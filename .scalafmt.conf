version=3.7.3

runner.dialect=scala213

align.preset=none

assumeStandardLibraryStripMargin=false

binPack {
  parentConstructors=false
  literalArgumentLists=true
  literalsMinArgCount=5
}

continuationIndent {
  defnSite=2
  callSite=2
  extendSite=4
}

danglingParentheses {
  callSite=true
  defnSite=true
}

# keep import on a single line even if it exceeds maxColumn
importSelectors=singleLine

includeCurlyBraceInSelectChains=true

includeNoParensInSelectChains=true

indentYieldKeyword=false

literals {
  long=Upper
  float=Lower
  double=Lower
}

maxColumn=120

newlines {
  source=keep
  neverInResultType=false
  neverBeforeJsNative=false
  # `true` can result in splitting colon and method type to a new line. Eg:
  # def method(one: String, two: String)
  #     : Future[Response]
  sometimesBeforeColonInMethodReturnType=false
  penalizeSingleSelectMultiArgList=true
  alwaysBeforeElseAfterCurlyIf=false
  alwaysBeforeMultilineDef=false
  avoidAfterYield=true
  afterCurlyLambda=never

  # never insert a newline after the first curly for these: `.map { case(a,b) => }`
  # https://scalameta.org/scalafmt/docs/configuration.html#newlinesbeforecurlylambdaparams
  beforeCurlyLambdaParams = never
}

optIn {
  configStyleArguments=true
  breakChainOnFirstMethodDot=true
  selfAnnotationNewline=true
  annotationNewlines=true
}

spaces {
  beforeContextBoundColon=Never
  afterTripleEquals=false
  inImportCurlyBraces=false
  inParentheses=false
  afterKeywordBeforeParen=true
  inByNameTypes=true
  afterSymbolicDefs=false
}

trailingCommas=always

verticalAlignMultilineOperators=false

verticalMultiline {
  atDefnSite=false
  arityThreshold=5
  newlineAfterOpenParen=false
}

# Scaladoc https://scalameta.org/scalafmt/docs/configuration.html#docstrings
docstrings {
  # https://github.com/scalameta/scalafmt/issues/891
  style=Asterisk
  # avoid adding new lines before every docstring when updating version 2.7.5 -> 3.7.3
  forceBlankLineBefore = false
  # do not reformat docstring.
  # Otherwise it'll change readability of docstrings to put all text on one line until it hits maxColumn length
  wrap = "no"
  removeEmpty = true
}

rewrite {
  rules = [Imports]

  imports {
    # create a separate line for each import instead of grouping them by braces
    expand = true
    # match default sort in IntelliJ and scalafix
    sort = ascii
  }
}
