log-filter {

  topic-log-received: "log_received"
  topic-log-filtered: "log_filtered"

  kafka {
    # comma separated list of host:port pairs of Kafka brokers
    bootstrap.servers: "localhost:9092"
  }


  # @see https://docs.confluent.io/platform/current/clients/client-configs.html
  kafka-consumer {
    kafka.bootstrap.servers: ${log-filter.kafka.bootstrap.servers}
    kafka.bootstrap.servers: ${?BOOTSTRAP_SERVERS}
    kafka.bootstrap-servers: "localhost:9092"

    # Identifier for the consumer group this consumer belongs to
    kafka.group.id: consumer-group-2

    # Deserializer class for converting byte array to key object
    # key.deserializer: org.apache.kafka.common.serialization.StringDeserializer

    # Deserializer class for converting byte array to value object
    # value.deserializer: org.apache.kafka.common.serialization.StringDeserializer

    # What to do when there is no initial offset in Kafka:
    # 'earliest': automatically reset the offset to the earliest offset
    # 'latest': automatically reset the offset to the latest offset
    # 'none': throw exception if no previous offset is found
    kafka.auto.offset.reset: earliest
    # kafka.auto.offset.reset: latest

    # Whether offsets are committed automatically at regular intervals
    kafka.enable.auto.commit: false

    # Frequency in milliseconds at which consumer offsets are auto-committed when auto-commit is enabled
    # kafka.auto.commit.interval.ms: 1000

    # Timeout in milliseconds used to detect consumer failures
    kafka.session.timeout.ms: 30000

    # Maximum number of records returned in a single call to poll()
    kafka.max.poll.records: 500

    # Maximum amount of time in milliseconds the consumer will wait for the response of a request
    kafka.request.timeout.ms: 40000

    # Controls how long the consumer will wait for the server to respond to a request
    kafka.default.api.timeout.ms: 60000

    # Timeout for consumer to wait for a partition assignment when joining a group
    kafka.max.poll.interval.ms: 300000
  }

  # kafka-producer {
  #   bootstrap-servers: kafka.bootstrap.servers
  #   bootstrap-servers: ${?BOOTSTRAP_SERVERS}
  #   acks: all
  #   max-in-flight-requests: 1
  # }
}
